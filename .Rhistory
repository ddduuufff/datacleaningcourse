install.packages(c("digest", "caTools", "bitops"))
install.packages(c("digest", "caTools", "bitops"))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
package ‘caTools’ is not available (for R version 3.5.1)
eric_apps()
eric_apps <- function(){
#packages
eric_packages <- c(
"dplyr",
"tidyr",
"stringr",
"lubridate",
"ggplot2",
"tidyverse"
)#We create a variable where we indicating that we select the ones that we do not have installed.
install.lib <- eric_packages[!eric_packages %in% installed.packages()]
#With a loop we install the libraries that we do not have.
for(lib in install.lib) install.packages(lib,dependences=TRUE)
#Load the libraries
sapply(eric_packages,require,character=TRUE)
}
eric_apps()
eric_apps
eric_apps()
#import that data
?read.csv()
#import that data
flyer_engagement_data<- read.csv("/Users/ericduford/Desktop/flyer_engagement_data.csv")
flyer_engagement_data %>%
View()
#next I'll import the store visits data
store_visits_data <- read.csv("/Users/ericduford/Desktop/store_visits_data.csv")
flyer_engagement_data %>%
View()
#packages
eric_packages <- c(
"dplyr",
"tidyr",
"stringr",
"lubridate",
"ggplot2",
"tidyverse",
"purr"
)#We create a variable where we indicating that we select the ones that we do not have installed.
#Load my packages
eric_apps()
eric_apps <- function(){
#packages
eric_packages <- c(
"dplyr",
"tidyr",
"stringr",
"lubridate",
"ggplot2",
"tidyverse",
"purr"
)#We create a variable where we indicating that we select the ones that we do not have installed.
install.lib <- eric_packages[!eric_packages %in% installed.packages()]
#With a loop we install the libraries that we do not have.
for(lib in install.lib) install.packages(lib,dependences=TRUE)
#Load the libraries
sapply(eric_packages,require,character=TRUE)
}
#Load my packages
eric_apps()
eric_apps <- function(){
#packages
eric_packages <- c(
"dplyr",
"tidyr",
"stringr",
"lubridate",
"ggplot2",
"tidyverse",
"purrr"
)#We create a variable where we indicating that we select the ones that we do not have installed.
install.lib <- eric_packages[!eric_packages %in% installed.packages()]
#With a loop we install the libraries that we do not have.
for(lib in install.lib) install.packages(lib,dependences=TRUE)
#Load the libraries
sapply(eric_packages,require,character=TRUE)
}
#Load my packages
eric_apps()
eric_apps()
#packages
eric_packages <- c(
"dplyr",
"tidyr",
"stringr",
"lubridate",
"ggplot2",
"tidyverse",
"purrr",
"shiny"
)#We create a variable where we indicating that we select the ones that we do not have installed.
eric_apps <- function(){
#packages
eric_packages <- c(
"dplyr",
"tidyr",
"stringr",
"lubridate",
"ggplot2",
"tidyverse",
"purrr",
"shiny"
)#We create a variable where we indicating that we select the ones that we do not have installed.
install.lib <- eric_packages[!eric_packages %in% installed.packages()]
#With a loop we install the libraries that we do not have.
for(lib in install.lib) install.packages(lib,dependences=TRUE)
#Load the libraries
sapply(eric_packages,require,character=TRUE)
}
#Load my packages
eric_apps()
####import that data####
#first I'll get the flyer data
flyer_engagement_data <- read.csv("/Users/ericduford/Desktop/flyer_engagement_data.csv")
#next I'll import the store visits data
store_visits_data <- read.csv("/Users/ericduford/Desktop/store_visits_data.csv")
flyer_engagement_data %>%
View()
flyer_engagement_data %>%
View()
flyer_engagement_data %>%
summary()
flyer_engagement_data %>%
group_by(test_group, weeks) %>%
summary()
flyer_engagement_data %>%
group_by(test_group, weeks) %>%
summarize(total_active_users = sum(all_active_users),
total_retail_users = sum(all_retailer_users))
flyer_engagement_data %>%
group_by(test_group, weeks) %>%
summarize(total_active_users = sum(all_active_users),
total_retail_users = sum(all_retailer_users)) %>%
View()
eric_apps <- function(){
#packages
eric_packages <- c(
"dplyr",
"tidyr",
"stringr",
"lubridate",
"ggplot2",
"tidyverse",
"purrr",
"shiny"
)#We create a variable where we indicating that we select the ones that we do not have installed.
install.lib <- eric_packages[!eric_packages %in% installed.packages()]
#With a loop we install the libraries that we do not have.
for(lib in install.lib) install.packages(lib,dependences=TRUE)
#Load the libraries
sapply(eric_packages,require,character=TRUE)
}
load("~/Rprojects/Rstudio/.RData")
.First <- function(){
#packages
eric_packages <- c(
"dplyr",
"tidyr",
"stringr",
"lubridate",
"ggplot2",
"tidyverse",
"purrr",
"shiny"
)#We create a variable where we indicating that we select the ones that we do not have installed.
install.lib <- eric_packages[!eric_packages %in% installed.packages()]
#With a loop we install the libraries that we do not have.
for(lib in install.lib) install.packages(lib,dependences=TRUE)
#Load the libraries
sapply(eric_packages,require,character=TRUE)
}
eric_apps() <- function(){
#packages
eric_packages <- c(
"dplyr",
"tidyr",
"stringr",
"lubridate",
"ggplot2",
"tidyverse",
"purrr",
"shiny"
)#We create a variable where we indicating that we select the ones that we do not have installed.
install.lib <- eric_packages[!eric_packages %in% installed.packages()]
#With a loop we install the libraries that we do not have.
for(lib in install.lib) install.packages(lib,dependences=TRUE)
#Load the libraries
sapply(eric_packages,require,character=TRUE)
}
View(eric_apps)
View(eric_apps)
swirl()
library(swirl)
rm(list=ls())
eric_apps <- function(){
#packages
eric_packages <- c(
"dplyr",
"tidyr",
"stringr",
"lubridate",
"ggplot2",
"tidyverse",
"purrr",
"shiny"
)#We create a variable where we indicating that we select the ones that we do not have installed.
install.lib <- eric_packages[!eric_packages %in% installed.packages()]
#With a loop we install the libraries that we do not have.
for(lib in install.lib) install.packages(lib,dependences=TRUE)
#Load the libraries
sapply(eric_packages,require,character=TRUE)
}
eric_apps()
getwd()
setwd("/Users/ericduford/Rprojects/datasciencecoursera")
setwd("/Users/ericduford/Rprojects/datasciencecoursera")
#checking for data directory and downloading file
if(!file.exists("./data")){dir.create("./data")}
#Step 1: download and unzip the data
# Unzip dataSet to /data directory
unzip(zipfile="./data/Dataset.zip", exdir="./data")
unzip(zipfile="./midtermdata/Dataset.zip",exdir="./midtermdata")
list.files("midtermdata")
#Step 1: download and unzip the data
# Unzip dataSet to /data directory
unzip(zipfile="./data/Dataset.zip")
download.file(fileUrl, destfile = "./data/cleaning_dataset", method = "curl")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "./data/cleaning_dataset", method = "curl")
#Step 1: download and unzip the data
# Unzip dataSet to /data directory
unzip(zipfile="./data/cleaning_dataset", exdir="./data")
list.files("./data/cleaning_dataset")
list.files("./data/cleaning_dataset")
list.files("cleaning_dataset")
view(cleaning_dataset)
str(cleaning_dataset)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "./data/cleaning_dataset.zip", method = "curl")
unzip(zipfile="./midtermdata/cleaning_dataset.zip",exdir="./midtermdata")
list.files("./data/cleaning_dataset")
list.files("./midtermdata/cleaning_dataset")
#Step 1: download and unzip the data
# Unzip dataSet to /data directory
unzip(zipfile="./data/cleaning_dataset.zip", exdir="./data")
#Step 1: download and unzip the data
# Unzip dataSet to /data directory
unzip(zipfile="./data/cleaning_dataset.zip", exdir="./data//midtermdata")
#Step 1: download and unzip the data
# Unzip dataSet to /data directory
unzip(zipfile="./data/cleaning_dataset.zip", exdir="./data/midtermdata")
list.files("./midtermdata/cleaning_dataset")
list.files(".data/midtermdata/cleaning_dataset")
unzip(zipfile="./midtermdata/cleaning_dataset.zip",exdir="./midtermdata")
list.files(".data/midtermdata/cleaning_dataset")
setwd("/Users/ericduford/Rprojects/datasciencecoursera")
list.files(".data/midtermdata/cleaning_dataset")
#define the path where the new folder has been unziped
pathdata = file.path("./midtermdata", "UCI HAR Dataset")
#create a file which has the 28 file names
files = list.files(pathdata, recursive=TRUE)
#show the files
files
#show the files
files
unzip(zipfile="./midtermdata/cleaning_dataset.zip", exdir="./midtermdata")
#define the path where the new folder has been unziped
pathdata = file.path("//Users/ericduford/Rprojects/datasciencecoursera/midtermdata", "UCI HAR Dataset")
#create a file which has the 28 file names
files = list.files(pathdata, recursive=TRUE)
#show the files
files
pathdata
#define the path where the new folder has been unziped
pathdata = file.path("./data/midtermdata", "UCI HAR Dataset")
#create a file which has the 28 file names
files = list.files(pathdata, recursive=TRUE)
#show the files
files
read.delim("README.text)
read.delim("README.text")
read.delim(pathdata,"README.text")
?read.delim()
read.delim("./data/midtermdata/README.text")
read.delim("./data/midtermdata/README.txt")
read.delim("./data/midtermdata/README.txt")
#show the files
files
setwd("/Users/ericduford/Rprojects/datacleaningcourse")
#checking for data directory and downloading file
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "./data/cleaning_dataset.zip", method = "curl")
#Step 1: download and unzip the data
# Unzip dataSet to /data directory
unzip(zipfile="./midtermdata/cleaning_dataset.zip", exdir="./midtermdata")
#define the path where the new folder has been unziped
pathdata = file.path("./data/midtermdata", "UCI HAR Dataset")
#create a file which has the 28 file names
files = list.files(pathdata, recursive=TRUE)
#show the files
files
#Step 1: download and unzip the data
# Unzip dataSet to /data directory
unzip(zipfile="./data/cleaning_dataset.zip", exdir="./midtermdata")
#define the path where the new folder has been unziped
pathdata = file.path("./data", "UCI HAR Dataset")
#create a file which has the 28 file names
files = list.files(pathdata, recursive=TRUE)
#show the files
files
#Step 1: download and unzip the data
# Unzip dataSet to /data directory
unzip(zipfile="./data/cleaning_dataset.zip", exdir="./midtermdata")
#define the path where the new folder has been unziped
pathdata = file.path("./data/cleaning_dataset.zip", "UCI HAR Dataset")
#create a file which has the 28 file names
files = list.files(pathdata, recursive=TRUE)
#show the files
files
#Step 1: download and unzip the data
# Unzip dataSet to /data directory
unzip(zipfile="./data/cleaning_dataset.zip", exdir="./data")
#define the path where the new folder has been unziped
pathdata = file.path("./data/cleaning_dataset.zip", "UCI HAR Dataset")
#create a file which has the 28 file names
files = list.files(pathdata, recursive=TRUE)
#show the files
files
#define the path where the new folder has been unziped
pathdata = file.path("./data/UCI HAR Dataset")
#create a file which has the 28 file names
files = list.files(pathdata, recursive=TRUE)
#show the files
files
